version: "3.8"

services:

  # rabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - type: volume
        source: rabbitmq-volume
        target: /var/lib/rabbitmq
    ports:
      - ${DOCKER_RABBITMQ_PORT}:15672

  redis:
    image: redis:latest
    restart: unless-stopped

  database:
    image: mysql:${DOCKER_MYSQL_VERSION?}
    restart: unless-stopped
    volumes:
      - type: volume
        source: mysql-volume
        target: /var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - ${DOCKER_MYSQL_PORT}:3306

  phpmyadmin:
    image: phpmyadmin:latest
    restart: unless-stopped
    environment:
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - PMA_USER=${MYSQL_USER}
#      - PMA_PASSWORD=${MYSQL_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - PMA_HOST=database
      - PMA_ARBITRARY=0
    links:
      - database
    ports:
      - ${DOCKER_PMA_PORT}:80

  php:
    build:
      context: ./docker/image/php-fpm-${DOCKER_PHP_VERSION}
      args:
        - COMPOSER_VERSION=${DOCKER_COMPOSER_VERSION?}
    restart: unless-stopped
    volumes:
      - "./:/code"

  nginx:
    build: ./docker/image/nginx
    restart: unless-stopped
    depends_on:
      - php
      - database
    volumes:
      - "./:/code"
    ports:
      - ${DOCKER_NGINX_PORT}:80
    environment:
      - DOCKER_NGINX_HOST=${DOCKER_NGINX_HOST}
#
#  mailer:
#    image: schickling/mailcatcher
#    ports: ["1025", "1080"]

  node:
    image: node:${DOCKER_NODE_VERSION}
    restart: no

volumes:
  mysql-volume:
    name: ${DOCKER_MYSQL_VOLUME}
  redis-phpstorm:
  rabbitmq-volume:
    name: ${DOCKER_RABBITMQ_VOLUME}
